name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
    
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Check code formatting with Black
      run: |
        poetry run black src --check
    
    - name: Lint with flake8
      run: |
        # 检查严重错误
        poetry run flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # 检查代码风格
        poetry run flake8 src --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Run tests with pytest
      run: |
        poetry run pytest -v --junitxml=test-results.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test-results.xml
      if: always()

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/python-serverless-demo:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/python-serverless-demo:${{ github.sha }} 